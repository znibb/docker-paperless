services:
  paperless:
    image: paperlessngx/paperless-ngx:latest
    container_name: paperless
    restart: unless-stopped
    secrets:
      - admin_password
      - db_password
      - email_password
    environment:
      PAPERLESS_TIME_ZONE: ${TZ}
      PAPERLESS_URL: https://paperless.${TRAEFIK_DOMAIN:?}
      PAPERLESS_REDIS: redis://redis:6379
      PAPERLESS_DBHOST: db
      PAPERLESS_DBPASS_FILE: /run/secrets/db_password
      PAPERLESS_ADMIN_USER: admin
      PAPERLESS_ADMIN_PASSWORD_FILE: /run/secrets/admin_password
      USERMAP_UID: ${UID:?}
      USERMAP_GID: ${GID:?}
      PAPERLESS_EMAIL_HOST: ${EMAIL_HOST:?}
      PAPERLESS_EMAIL_PORT: ${EMAIL_PORT:?}
      PAPERLESS_EMAIL_USE_TLS: ${EMAIL_USE_TLS:?}
      PAPERLESS_EMAIL_USE_SSL: ${EMAIL_USE_SSL:?}
      PAPERLESS_EMAIL_HOST_USER: ${EMAIL_USER:?}
      PAPERLESS_EMAIL_HOST_PASSWORD_FILE: /run/secrets/email_password
      PAPERLESS_FILENAME_FORMAT: ${PAPERLESS_FILENAME_FORMAT}
      PAPERLESS_APP_LOGO: /logo/paperless-ngx.png
      PAPERLESS_APP_TITLE: Paperless
      PAPERLESS_LOGOUT_REDIRECT_URL: https://auth.${TRAEFIK_DOMAIN:?}/outpost.goauthentik.io/sign_out
      PAPERLESS_DISABLE_REGULAR_LOGIN: false
      PAPERLESS_REDIRECT_LOGIN_TO_SSO: false
      PAPERLESS_ENABLE_HTTP_REMOTE_USER: true
      PAPERLESS_HTTP_REMOTE_USER_HEADER_NAME: HTTP_X_AUTHENTIK_USERNAME
      PAPERLESS_APPS: allauth.socialaccount.providers.openid_connect
      PAPERLESS_SOCIALACCOUNT_PROVIDERS: >
        {
          "openid_connect": {
            "APPS": [
              {
                "provider_id": "authentik",
                "name": "Authentik SSO",
                "client_id": "${AUTHENTIK_CLIENT_ID:?}",
                "secret": "${AUTHENTIK_SECRET:?}",
                "settings": {
                  "server_url": "https://auth.${TRAEFIK_DOMAIN:?}/application/o/paperless/.well-known/openid-configuration"
                }
              }
            ],
            "OAUTH_PKCE_ENABLED": "True"
          }
        }
    labels:
      - traefik.enable=true
      - traefik.http.routers.paperless.entrypoints=https
      - traefik.http.routers.paperless.rule=Host(`paperless.${TRAEFIK_DOMAIN:?}`)
      - traefik.http.routers.paperless.tls=true
      - traefik.http.routers.paperless.tls.certresolver=cloudflare
      - traefik.http.services.paperless.loadbalancer.server.port=8000
      - traefik.http.routers.paperless.middlewares=authentik@file
    networks:
      - paperless
      - traefik
    ports:
      - 8000:8000
    volumes:
      - ./data/data:/usr/src/paperless/data
      - ./data/media:/usr/src/paperless/media
      - ./data/export:/usr/src/paperless/export
      - ./data/consume:/usr/src/paperless/consume
    depends_on:
      - cache
      - db

  cache:
    image: docker.io/library/redis:7
    container_name: paperless-cache
    hostname: redis
    restart: unless-stopped
    environment:
      TZ: ${TZ}
    networks:
      - paperless
    volumes:
      - cache:/data

  db:
    image: docker.io/library/postgres:16
    container_name: paperless-db
    user: ${UID:?}:${GID:?}
    restart: unless-stopped
    secrets:
      - db_password
    environment:
      POSTGRES_DB: paperless
      POSTGRES_USER: paperless
      POSTGRES_PASSWORD_FILE: /run/secrets/db_password
      TZ: ${TZ}
    networks:
      - paperless
    volumes:
      - ./data/db:/var/lib/postgresql/data

networks:
  paperless:
    name: paperless
  traefik:
    external: true

secrets:
  admin_password:
    file: ./secrets/admin_password.secret
  db_password:
    file: ./secrets/db_password.secret
  email_password:
    file: ./secrets/email_password.secret
  secret_key:
    file: ./secrets/secret_key.secret

volumes:
  cache:
